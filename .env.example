# =================================================================
# üîß CONFIGURATION ENVIRONNEMENT PERKUP BACKEND
# =================================================================
# Copier ce fichier vers .env et remplir les valeurs

# =================================================================
# üóÑÔ∏è BASE DE DONN√âES MONGODB
# =================================================================
# URL de connexion MongoDB (Atlas ou locale)
# Format MongoDB Atlas: mongodb+srv://username:password@cluster.mongodb.net/dbname
# Format local: mongodb://localhost:27017/perkup
MONGO_URI=mongodb://localhost:27017/perkup

# =================================================================
# üîê AUTHENTIFICATION JWT
# =================================================================
# Cl√© secr√®te pour signer les tokens JWT (g√©n√©rer une cha√Æne al√©atoire forte)
# Exemple de g√©n√©ration: openssl rand -hex 64
JWT_SECRET=your-super-secret-jwt-key-here-generate-a-strong-random-string

# =================================================================
# üìß SERVICE EMAIL AWS SES
# =================================================================
# Adresse email source v√©rifi√©e dans AWS SES
EMAIL_SOURCE=noreply@yourdomain.com

# R√©gion AWS SES (ex: eu-west-1, us-east-1)
SES_REGION=eu-west-1

# =================================================================
# üí≥ STRIPE CONFIGURATION
# =================================================================
# Cl√© secr√®te Stripe (commence par sk_test_ pour test, sk_live_ pour prod)
STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key_here

# IDs des prix Stripe pour chaque plan d'abonnement
# R√©cup√©rer depuis le dashboard Stripe > Produits
STRIPE_PRICE_BASIC=price_1234567890_basic
STRIPE_PRICE_SUPER=price_1234567890_super
STRIPE_PRICE_PREMIUM=price_1234567890_premium

# Cl√© publique Stripe (pour le frontend)
STRIPE_PUBLISHABLE_KEY=pk_test_your_stripe_publishable_key_here

# =================================================================
# üöÄ REDIS CACHE (OPTIONNEL)
# =================================================================
# Activer/d√©sactiver le syst√®me de cache Redis
CACHE_ENABLED=true

# Configuration Redis (local ou cloud)
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0

# Ou utiliser une URL Redis compl√®te (prioritaire si d√©finie)
# REDIS_URL=redis://localhost:6379
# REDIS_URL=redis://username:password@hostname:port/database

# TTL (Time To Live) en secondes pour diff√©rents types de cache
REDIS_TTL_USER=1800          # 30 minutes
REDIS_TTL_SUBSCRIPTION=900   # 15 minutes
REDIS_TTL_PARTNERS=3600      # 1 heure
REDIS_TTL_GEO=86400         # 24 heures

# =================================================================
# üåç ENVIRONNEMENT
# =================================================================
# Environment: development, staging, production
NODE_ENV=development

# Origines autoris√©es pour CORS (s√©par√©es par des virgules)
# En development: * (toutes origines)
# En production: domaines sp√©cifiques
ALLOWED_ORIGINS=http://localhost:3000,https://yourdomain.com

# =================================================================
# üîß AWS CONFIGURATION (OPTIONNEL)
# =================================================================
# Les credentials AWS peuvent √™tre configur√©s via:
# 1. Variables d'environnement (ci-dessous)
# 2. Fichier ~/.aws/credentials
# 3. R√¥les IAM (recommand√© en production)

# AWS_ACCESS_KEY_ID=your_aws_access_key
# AWS_SECRET_ACCESS_KEY=your_aws_secret_key
# AWS_REGION=eu-west-1

# =================================================================
# üìç SERVICES G√âOLOCALISATION (OPTIONNEL)
# =================================================================
# Cl√©s API pour services de g√©olocalisation si utilis√©s
# GOOGLE_MAPS_API_KEY=your_google_maps_api_key
# MAPBOX_ACCESS_TOKEN=your_mapbox_token

# =================================================================
# üéØ CONFIGURATION SERVEUR
# =================================================================
# Port pour serverless-offline (d√©veloppement local)
PORT=4000

# =================================================================
# üìä MONITORING & LOGS (OPTIONNEL)
# =================================================================
# Niveau de logs: error, warn, info, debug
LOG_LEVEL=info

# Activer le tracing AWS X-Ray
# AWS_XRAY_TRACING_NAME=perkup-backend
# _X_AMZN_TRACE_ID=auto

# =================================================================
# üîí S√âCURIT√â
# =================================================================
# Rate limiting (requ√™tes par heure)
RATE_LIMIT_PER_HOUR=1000

# Limite de taille des requ√™tes (en bytes)
MAX_REQUEST_SIZE=10485760  # 10MB

# =================================================================
# üß™ TESTS (OPTIONNEL)
# =================================================================
# Base de donn√©es de test s√©par√©e
# MONGO_URI_TEST=mongodb://localhost:27017/perkup_test

# =================================================================
# üìù NOTES
# =================================================================
# - G√©n√©rer des cl√©s s√©curis√©es pour JWT_SECRET
# - Configurer AWS SES pour l'envoi d'emails
# - Cr√©er les produits et prix dans Stripe
# - Redis optionnel mais recommand√© pour les performances
# - V√©rifier les permissions AWS pour SES et autres services
